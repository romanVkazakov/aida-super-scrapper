--- a/app/main.py
+++ b/app/main.py
@@
-from fastapi import FastAPI, HTTPException
+from fastapi import FastAPI, HTTPException, Response
+from prometheus_client import (
+    Counter,
+    Gauge,
+    CollectorRegistry,
+    generate_latest,
+    CONTENT_TYPE_LATEST,
+)
+import redis
@@
-app = FastAPI()
+registry       = CollectorRegistry()
+scrape_success = Counter("scrape_success_total", "Successful /scrape requests", registry=registry)
+proxy_good     = Gauge("proxy_good_total",    "Good proxies in Redis",        registry=registry)
+
+app = FastAPI()
+
+# ── /metrics ────────────────────────────────────────────────────────────────
+@app.get("/metrics")
+async def metrics():
+    r = redis.Redis(host="redis", decode_responses=True)
+    proxy_good.set(len(r.keys("good_proxy:*")))
+    return Response(generate_latest(registry), media_type=CONTENT_TYPE_LATEST)
@@
-    # успешный ответ клиенту
+    scrape_success.inc()          # Prometheus counter
+    # успешный ответ клиенту
